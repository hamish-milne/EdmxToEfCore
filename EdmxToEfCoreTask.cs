namespace EdmxToEfCore
{
	using Microsoft.Build.Framework;
	using Microsoft.Build.Utilities;
	using System.IO;
	using System.Linq;
	using System.Collections.Generic;
	using System.Xml.Serialization;

	public class EdmxToEfCoreTask : Task
	{
		public ITaskItem[] InputModels { get; set; }
		public bool AutoIncludeFromProject { get; set; } = true;
		public string OutputPathPattern { get; set; } = "%.autogenerated.cs";

		private string ToOutputPath(string input)
		{
			return Path.Combine(Path.GetDirectoryName(input),
				OutputPathPattern.Replace("%", Path.GetFileNameWithoutExtension(input)));
		}

		public override bool Execute()
		{
			var inputs = new List<string>();
			if (AutoIncludeFromProject)
			{
				inputs.AddRange(Directory.EnumerateFiles("", "*.edmx", SearchOption.AllDirectories));
			}
			inputs.AddRange(InputModels.Select(o => o.GetMetadata("FullPath")));

			foreach (var inFile in inputs.Distinct())
			{
				var outFile = ToOutputPath(inFile);
				Edmx edmx;
				Log.LogMessage($"Loading EDMX model at {inFile}...");
				using (var fs = File.Open(inFile, FileMode.Open))
				{
					edmx = (Edmx)(new XmlSerializer(typeof(Edmx))).Deserialize(fs);
				}

				Log.LogMessage($"Writing C# code to {outFile}...");
				using (var codeWriter = new CSharpCodeWriter(outFile))
				{
					edmx.Runtime.ConceptualModels.Schema.WriteSingleFile(codeWriter);
				}

				Log.LogMessage("Success!");
			}
			
			return false;
		}
	}
}